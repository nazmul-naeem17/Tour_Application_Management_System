-- Tour Application Management System

-- Employee Table
CREATE TABLE Employee (
    E_ID VARCHAR2(10) NOT NULL,
    E_NAME VARCHAR2(40),
    ADDRESS VARCHAR2(40),
    MOBILE NUMBER(11, 0),
    DESIGNATION VARCHAR2(20) NOT NULL,
    C_ID VARCHAR2(10),
    CONSTRAINT EMPLOYEE_PK PRIMARY KEY (E_ID),
    CONSTRAINT EMPLOYEE_CON FOREIGN KEY (C_ID) REFERENCES Customer (C_ID)
);

-- Serve Table
CREATE TABLE Serve (
    E_ID VARCHAR2(10),
    C_ID VARCHAR2(10),
    B_ID VARCHAR2(10),
    CONSTRAINT SERVE_FK2 FOREIGN KEY (E_ID) REFERENCES Employee (E_ID),
    CONSTRAINT SERVE_FK3 FOREIGN KEY (C_ID) REFERENCES Customer (C_ID),
    CONSTRAINT SERVE_FK4 FOREIGN KEY (B_ID) REFERENCES Booking (B_ID)
);

-- Customer Table
CREATE TABLE Customer (
    C_ID VARCHAR2(10) NOT NULL,
    C_NAME VARCHAR2(40),
    MOBILE NUMBER(11, 0),
    ADDRESS VARCHAR2(40),
    EMAIL VARCHAR2(40),
    E_ID VARCHAR2(10),
    GENDER VARCHAR2(10),
    CONSTRAINT CUSTOMER_PK PRIMARY KEY (C_ID),
    CONSTRAINT CUSTOMER_CON FOREIGN KEY (E_ID) REFERENCES Employee (E_ID)
);

-- Choose Table
CREATE TABLE Choose (
    C_ID VARCHAR2(10),
    TOUR_ID VARCHAR2(10),
    CONSTRAINT CHOOSE_FK FOREIGN KEY (C_ID) REFERENCES Customer (C_ID),
    CONSTRAINT CHOOSE_FK2 FOREIGN KEY (TOUR_ID) REFERENCES Tour (TOUR_ID)
);

-- Tour Table
CREATE TABLE Tour (
    TOUR_ID VARCHAR2(10) NOT NULL,
    DESCRIPTION VARCHAR2(40),
    LOCATION VARCHAR2(40),
    COST NUMBER(10, 2) NOT NULL,
    AVAILABLE_SLOT VARCHAR2(10),
    B_ID VARCHAR2(10),
    CONSTRAINT TOUR_PK PRIMARY KEY (TOUR_ID),
    CONSTRAINT TOUR_CON FOREIGN KEY (B_ID) REFERENCES Booking (B_ID)
);

-- Can Table
CREATE TABLE Can (
    TOUR_ID VARCHAR2(10),
    B_ID VARCHAR2(10),
    CONSTRAINT CAN_FK FOREIGN KEY (TOUR_ID) REFERENCES Tour (TOUR_ID),
    CONSTRAINT CAN_FK2 FOREIGN KEY (B_ID) REFERENCES Booking (B_ID)
);

-- Booking Table
CREATE TABLE Booking (
    B_ID VARCHAR2(10) NOT NULL,
    B_DATE DATE,
    STATUS VARCHAR2(20),
    LOCATION VARCHAR2(40),
    TOUR_ID VARCHAR2(10),
    C_ID VARCHAR2(10),
    CONSTRAINT BOOKING_PK PRIMARY KEY (B_ID),
    CONSTRAINT BOOKING_CON FOREIGN KEY (TOUR_ID) REFERENCES Tour (TOUR_ID),
    CONSTRAINT BOOKING_CON1 FOREIGN KEY (C_ID) REFERENCES Customer (C_ID)
);

-- Give Table
CREATE TABLE Give (
    B_ID VARCHAR2(10),
    P_ID VARCHAR2(10),
    CONSTRAINT GIVE_FK FOREIGN KEY (B_ID) REFERENCES Booking (B_ID),
    CONSTRAINT GIVE_FK2 FOREIGN KEY (P_ID) REFERENCES Payment (P_ID)
);

-- Payment Table
CREATE TABLE Payment (
    P_ID VARCHAR2(10) NOT NULL,
    P_DATE DATE,
    AMOUNT NUMBER(10, 2),
    B_ID VARCHAR2(10),
    CONSTRAINT PAYMENT_PK PRIMARY KEY (P_ID),
    CONSTRAINT PAYMENT_CON FOREIGN KEY (B_ID) REFERENCES Booking (B_ID)
);

-- Appreciate Table
CREATE TABLE Appreciate (
    F_ID VARCHAR2(10),
    P_ID VARCHAR2(10),
    CONSTRAINT APPRECIATE_FK FOREIGN KEY (F_ID) REFERENCES Feedback (F_ID),
    CONSTRAINT APPRECIATE_FK2 FOREIGN KEY (P_ID) REFERENCES Payment (P_ID)
);

-- Feedback Table
CREATE TABLE Feedback (
    F_ID VARCHAR2(10) NOT NULL,
    RATING NUMBER(5, 0),
    F_DATE DATE,
    COMMENTS VARCHAR2(40),
    P_ID VARCHAR2(10),
    CONSTRAINT FEEDBACK_PK PRIMARY KEY (F_ID),
    CONSTRAINT FEEDBACK_CON FOREIGN KEY (P_ID) REFERENCES Payment (P_ID)
);
